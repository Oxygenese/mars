version: '3.9'
services:
  mysql:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/mysql:8.0.16"
    ports:
      - protocol: tcp
        published: 3306
        target: 3306
        mode: host
    networks:
      - backend
    env_file:
      - ./nacos_conf/mysql.env
    volumes:
      - mysql_data:/var/lib/mysql
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  nacos:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/nacos-server:2.0.3"
    ports:
      - target: 8848
        protocol: tcp
        mode: host
        published: 8848
    depends_on:
      - mysql
    networks:
      - backend
    env_file:
      - ./nacos_conf/nacos-standlone-mysql.env
    volumes:
      - nacos_data:/home/nacos/init.d/custom.properties
      - nacos_log:/home/nacos/logs
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  redis:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/redis:6"
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
    networks:
      - backend
    command:
      - /bin/bash
      - -c
      - redis-server --requirepass 970312
    volumes:
      - redis_data:/data
      - redis_log:/logs
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  etcd:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/etcd:3.4.15"
    volumes:
      - etcd_data:/bitnami/etcd/data
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - protocol: tcp
        target: 2379
        mode: ingress
        published: 2379
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  apisix:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/apisix:2.12.1-alpine"
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - apisix_log:/usr/local/apisix/logs
    ports:
      - "9080:9080"
      - "9091:9091"
      - "9443:9443"
      - "9092:9092"
    networks:
      - backend
    depends_on:
      - etcd
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  apisix-dashboard:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/apisix-dashboard:2.10.1-alpine"
    volumes:
      - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - mode: host
        protocol: tcp
        target: 9000
        published: 9527
    networks:
      - backend
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  rabbitmq:
    image: "registry.cn-hangzhou.aliyuncs.com/mars-projects/rabbitmq:3.8.3-management"
    ports:
      - "5672:5672"
      - protocol: tcp
        published: 15672
        target: 15672
        mode: host
    volumes:
      - rabiitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - backend
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

networks:
  backend:

volumes:
  mysql_data:
  nacos_data:
  nacos_log:
  redis_data:
  redis_log:
  etcd_data:
  apisix_log:
  rabiitmq_data: